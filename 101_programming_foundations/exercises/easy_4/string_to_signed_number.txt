Convert a String to a Signed Number!

In the previous exercise, you developed a method that converts simple numeric strings to Integers. In this exercise, you're going to extend that method to work with signed numbers.

Write a method that takes a String of digits, and returns the appropriate number as an integer. The String may have a leading + or - sign; if the first character is a +, your method should return a positive number; if it is a -, your method should return a negative number. If no sign is given, you should return a positive number.

You may assume the string will always contain a valid number.

You may not use any of the standard conversion methods available in Ruby, such as String#to_i, Integer(), etc. You may, however, use the string_to_integer method from the previous lesson.

Examples

string_to_signed_integer('4321') == 4321
string_to_signed_integer('-570') == -570
string_to_signed_integer('+100') == 100

understand the problem:
  same as last problem but any numeric strings starting with '-' should
  result in negative numbers
  
logic:
 negative = make a method is_negative? 
              string.chr == '-'
 case string.chr
  when '+'
    string.shift
  when '-'
    string.shift
  else
    string
 
 result = call original method with string
 
 result * -1 if negative
 result