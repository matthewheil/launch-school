Convert a Signed Number to a String!

In the previous exercise, you developed a method that converts non-negative 
numbers to strings. In this exercise, you're going to extend that method by 
adding the ability to represent negative numbers as well.

Write a method that takes an integer, and converts it to a string 
representation.

You may not use any of the standard conversion methods available in Ruby, such 
as Integer#to_s, String(), Kernel#format, etc. You may, however, use 
integer_to_string from the previous exercise.

Examples

signed_integer_to_string(4321) == '+4321'
signed_integer_to_string(-123) == '-123'
signed_integer_to_string(0) == '0'

Understand the problem:
 Create a method that takes an integer (positive, 0, or negative) and returns
 the string representation with the appropriate sign.
 
Input:
  Any integer

Output:
  A string representation of the input number with the appropriate sign

Logic:
  Use a case statement. 
    If the number is < 0, pass the negative version (making it positive) to 
    the previous method. Prepend the - to the result
    Else, call the method normally and prepend + to the result