The Fibonacci series is a sequence of numbers starting with 1 and 1 where each 
number is the sum of the two previous numbers: the 3rd Fibonacci number is 
1 + 1 = 2, the 4th is 1 + 2 = 3, the 5th is 2 + 3 = 5, and so on. 

In mathematical terms:

F(1) = 1
F(2) = 1
F(n) = F(n - 1) + F(n - 2) where n > 2

Sequences like this translate naturally as "recursive" methods. 

A recursive method is one in which the method calls itself. For example:

def sum(n)
  return 1 if n == 1
  n + sum(n - 1)
end

sum is a recursive method that computes the sum of all integers between 1 and n.

Recursive methods have three primary qualities:

They call themselves at least once.
They have a condition that stops the recursion (n == 1 above).
They use the result returned by themselves.
In the code above, sum calls itself once; it uses a condition of n == 1 to stop 
recursing; and, n + sum(n - 1) uses the return value of the recursive call to 
compute a new return value.

Write a recursive method that computes the nth Fibonacci number, where nth is 
an argument to the method.

This exercise is a lead-in for the next two exercises. It verges on the 
Advanced level, so don't worry or get discouraged if you can't do it on your own. 
Recursion is tricky, and even experienced developers can have trouble dealing 
with it.

Examples:

fibonacci(1) == 1
fibonacci(2) == 1
fibonacci(3) == 2
fibonacci(4) == 3
fibonacci(5) == 5
fibonacci(12) == 144
fibonacci(20) == 6765

Understand the problem:
  create a method that takes an integer as an argument
    the integer is the nth Fibonacci number in the series
    use recursion
  return the value of the nth Fibonacci number

Pseudo code:
  previous number
      current number
      fibonacci number
        the argument can be the number of times to do the sequence
        
      previous = 0
      current = 1
      loop
      fib = previous + current
      break if count == given_argument
      previous = current
      current = fib
      end loop
  This doesn't use recursion, but want to test first anyway